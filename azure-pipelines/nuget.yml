resources:
- repo: self
trigger: none
pr: none

variables:
- template: templates/vars.yml

parameters:
  - name: selectedPackage
    displayName: 'Package for publish (projectName -> packageName)'
    type: string
    default: 'none'
    values:
      - 'none'
      - 'Belvedere.Bindings.Droid -> Softeq.ZendeskBelvedere'
      - 'BelvedereCore.Bindings.Droid -> Softeq.ZendeskBelvedereCore'
      - 'Suas.Bindings.Droid -> Softeq.ZendeskSuas'
      - 'JavaCommon.Bindings.Droid -> Softeq.ZendeskJavaCommon'
      - 'CommonUI.Bindings.Droid -> Softeq.ZendeskCommonUI.Droid'
      - 'CoreSDK.Bindings.Droid -> Softeq.ZendeskCore.Droid'
      - 'Guide.Bindings.Droid -> Softeq.ZendeskGuide.Droid'
      - 'GuideProviders.Bindings.Droid -> Softeq.ZendeskGuideProviders.Droid'
      - 'Messaging.Bindings.Droid -> Softeq.ZendeskMessaging.Droid'
      - 'MessagingApi.Bindings.Droid -> Softeq.ZendeskMessagingAPI.Droid'
      - 'ConfigurationSDK.Bindings.Droid -> Softeq.ZendeskSDKConfigurations.Droid'
      - 'SupportSDK.Bindings.Droid -> Softeq.ZendeskSupport.Droid'
      - 'SupportProvidersSDK.Bindings.Droid -> Softeq.ZendeskSupportProviders.Droid'
      - 'ChatProvidersSDK.Bindings.Droid -> Softeq.ZendeskChatProviders.Droid'
      - 'ChatSDK.Bindings.Droid -> Softeq.ZendeskChat.Droid'
      - 'ChatSocketClient.Bindings.Droid -> Softeq.ZendeskChatSocketClient.Droid'
      - 'ChatVisitorClient.Bindings.Droid -> Softeq.ZendeskChatVisitorClient.Droid'

jobs:
- job: macOS
  pool:
    vmImage: $(MACOS_VM_IMAGE)
  steps:
  - bash: |
      echo ${{ parameters.selectedPackage }}
      IFS=' -> ' read -ra ARR <<< "${{ parameters.selectedPackage }}"; # split parameter value

      PROJECT_NAME=${ARR[0]}
      echo "Run for project: $PROJECT_NAME"
      echo "##vso[task.setvariable variable=projectName]$PROJECT_NAME"

      PACKAGE_NAME=${ARR[2]}
      echo "Package for publish: $PACKAGE_NAME"
      echo "##vso[task.setvariable variable=packageName]$PACKAGE_NAME"
    displayName: 'Set build variables'

  - template: templates/setup-dotnet.yml
    parameters:
      version: $(DOTNET_SDK_VERSION)

  - task: Bash@3
    displayName: Restore NuGets
    inputs:
      targetType: 'inline'
      script: |
        dotnet restore
  - task: Bash@3
    displayName: Pack Library
    inputs:
      targetType: 'inline'
      script: |
        cd src/$(projectName) && dotnet pack -c Release -o .

  - task: CopyFiles@2
    inputs:
      contents: '$(packageName)*.nupkg'
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'drop'